{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","filterName","PersonsForm","onSubmit","addName","name","nameChange","number","numberChange","type","Persons","persons","person","index","toLowerCase","indexOf","map","key","id","onClick","deleteName","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","className","message","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","setMessage","setClassName","useEffect","personsService","initialPersons","event","target","PersonForm","preventDefault","window","confirm","find","p","changePerson","setTimeout","catch","concat","res","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.855fe7d7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = props => {\n\n  return (\n    <div>\n      filter shown with <input value={props.filter} onChange={props.filterName} />\n    </div>\n  )\n}\n\nexport default Filter;","import React from 'react'\n\nconst PersonsForm = props => {\n\n  return (\n    <form onSubmit={props.addName}>\n      <div>\n        name: <input value={props.name} onChange={props.nameChange} />\n      </div>\n      <div>\n        number: <input value={props.number} onChange={props.numberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonsForm","import React from 'react'\n\nconst Persons = props => {\n\n  const showPersons = () => {\n    const filterPersons = props.persons.filter((person, index) => {\n      return (person.name).toLowerCase().indexOf(props.filter) >= 0\n    })\n    return filterPersons\n  }\n\n  return (\n    <div>\n      {showPersons().map(person => {\n        return (\n          <p key={person.id}>{person.name} {person.number} \n            <button onClick={() => props.deleteName(person.id)}>delete</button>\n          </p>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteObject = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteObject, }","import React from 'react'\n\nconst Notification = ({ className, message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={className}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personsService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [className, setClassName] = useState('')\n\n  useEffect(() => {\n    personsService.getAll().then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  }, [])\n\n  const addName = event => {\n    event.preventDefault()\n    const existName = persons.map(person => person.name)\n    if (existName.indexOf(newName) >= 0) {\n      const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if (result) {\n        const person = persons.find(p => p.name === newName)\n        const changePerson = { ...person, number: newNumber }\n        personsService.update(person.id, changePerson).then(initialPersons => {\n          setPersons(persons.map(person => person.name !== newName ? person : initialPersons))\n          setNewName('')\n          setNewNumber('')\n          setClassName('notice')\n          setMessage(\n            `Changed Number is ${newNumber}`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        }).catch(() => {\n          setClassName('error')\n          setMessage(\n            `Infomation '${newName}' has already been removed from server`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n      personsService.create(newPerson).then(initialPersons => {\n        setPersons(persons.concat(initialPersons))\n        setNewName('')\n        setNewNumber('')\n        setClassName('notice')\n        setMessage(\n          `Added ${newName}`\n        )\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      \n    }\n  }\n\n  const deleteName = id => {\n    const person = persons.find(p => p.id === id)\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personsService.deleteObject(id).then(res => {\n        setPersons(persons.filter(p => p.id !== id))\n      })\n    }\n  }\n\n  const handleNameChange = event => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value)\n  }\n\n  const handlefilterName = event => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification className={className} message={message} />\n      <Filter filter={filter} filterName={handlefilterName} />\n      <h2>add a new</h2>\n      <PersonForm name={newName} number={newNumber} addName={addName} nameChange={handleNameChange} numberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} deleteName={deleteName} />\n      {/* <div>debug: {newName}</div> */}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}